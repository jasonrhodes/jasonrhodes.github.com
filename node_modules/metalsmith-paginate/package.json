{
  "name": "metalsmith-paginate",
  "version": "0.3.0",
  "description": "A simple plugin that uses metalsmith-collections to create a paginated collection",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "homepage": "https://github.com/RobinThrift/metalsmith-paginate",
  "issues": "https://github.com/RobinThrift/metalsmith-paginate/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/RobinThrift/metalsmith-paginate.git"
  },
  "keywords": [
    "metalsmith",
    "plugin"
  ],
  "author": {
    "name": "Robin Thrift",
    "email": "thrift.d.robin@googlemail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "mocha": "^1.18.2",
    "should": "^3.3.0"
  },
  "dependencies": {
    "lodash.clone": "^2.4.1"
  },
  "readme": "#metalsmith-paginate\n\nThis plug-in makes [metalsmith-collections](https://github.com/segmentio/metalsmith-collections) \"paginatable\". it does so by creating virtual files which contain the information about the collection as well as the previous and next page.\n\nYou **must** use this in conjunction with [metalsmith-collections](https://github.com/segmentio/metalsmith-collections)!\n\n##Usage\n\nFirstly you must create a file that contains the information over which collection you want to paginate and the template name:\n\n`blog.md`\n```markdown\n---\ntemplate: TEMPLATE-NAME.EXT\npaginate: posts\n---\n```\n> Note: if you give the page a title and use the [metalsmith-permalinks](https://github.com/segmentio/metalsmith-permalinks) plug-in you might get some weird result.\n\n\nThen use your collections as usual and call `paginate()`.\n\n```js\n\nvar Metalsmith  = require('metalsmith'),\n    collections = require('metalsmith-collections'),\n    paginate    = require('metalsmith-paginate'),\n    // ...\n\nMetalsmith(__dirname)\n    .use(collections({\n        posts: {\n            pattern: 'content/posts/*.md',\n            sortBy: 'date',\n            reverse: true\n        }\n    }))\n    .use(paginate({\n        perPage: 10,\n        path: \"blog/page\"\n    }))\n    .use(templates('ENGINE-NAME'))\n    // ...\n    .build()\n\n```\n\n##Options\n| name | description |\n|:-----|:------------|\n|perPage|The number of items to be displayed per page|\n|path|The path were the files will be outputted to. Appended with \"-$NUM.html\" where $NUM is the page number. So \"blog/page\" would for example result in the second page being rendered as `blog/page-2.html`. You can also use the placeholder ':collection' to insert the name of the collection.|\n\n\n##Templates\n\nThe pagination info won't be of any use to you if you don't render it. Each (virtual) pagination file will contain a new object under the key \"pagination\" which contains the following info:\n\n| name | description |\n|:-----|:------------|\n|num|The page number|\n|total|The total number of pages|\n|start|The start index|\n|end|The end index|\n|prev|The previous page object|\n|next|The next page object|\n\nYou can then use this info in your template. Here's an example using Handlebars with a custom limit helper (which can be found [here](https://gist.github.com/RobinThrift/10375204)).\n\n```handlebars\n{{#each (limit collections.posts this.pagination.end this.pagination.start)}}\n    <li class=\"post\">\n        <h2 class=\"entry-title\">\n            <a href=\"{{ this.path }}\" rel=\"bookmark\">{{ this.title }}</a>\n        </h2>\n        <article class=\"entry-summary\">\n            {{{ this.excerpt }}}\n        </article>\n        <footer>\n\n            <a href=\"{{ this.path }}\" class=\"button\">Read More</a>\n        </footer>\n    </li>\n{{/each}}\n\n{{#if this.pagination}}\n    <nav class=\"pagination\">\n        {{#if this.pagination.next}}\n            <a href=\"{{this.pagination.next.path}}\">&lt; Prev</a>\n        {{/if}}\n    \n        {{#if this.pagination.prev}}\n            <a href=\"{{this.pagination.prev.path}}\">Next &gt;</a>\n        {{/if}}\n    </nav>\n{{/if}}\n```\n> Note: This example also uses the [metalsmith-permalinks](https://github.com/segmentio/metalsmith-permalinks) plug-in",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/RobinThrift/metalsmith-paginate/issues"
  },
  "_id": "metalsmith-paginate@0.3.0",
  "dist": {
    "shasum": "9e39bfdf19f7c5def042fc8296dec7ebfac31cd5"
  },
  "_from": "metalsmith-paginate@",
  "_resolved": "https://registry.npmjs.org/metalsmith-paginate/-/metalsmith-paginate-0.3.0.tgz"
}
